"""
Problem Description
Given an integer, A. Find and Return first positive A integers in ascending order containing only digits 1, 2, and 3.

NOTE: All the A integers will fit in 32-bit integers.



Problem Constraints
1 <= A <= 29500



Input Format
The only argument given is integer A.



Output Format
Return an integer array denoting the first positive A integers in ascending order containing only digits 1, 2 and 3.



Example Input
Input 1:

 A = 3
Input 2:

 A = 7


Example Output
Output 1:

 [1, 2, 3]
Output 2:

 [1, 2, 3, 11, 12, 13, 21]


Example Explanation
Explanation 1:

 Output denotes the first 3 integers that contains only digits 1, 2 and 3.
Explanation 2:

 Output denotes the first 3 integers that contains only digits 1, 2 and 3.
"""
import collections
class Solution:
    # @param A : integer
    # @return a list of integers
    def solve(self, A):
        if A == 1:
            return [1]
        if A == 2:
            return [1,2]
        if A == 3:
            return [1,2,3]
        res = [1,2,3]
        queue = collections.deque(res)
        while len(res) < A:
            val = (queue.popleft() * 10)
            add = 1
            while len(res) < A and add < 4:
                res.append(val+add)
                queue.append(val+add)
                add += 1
                
                if len(res) == A:
                    return res
