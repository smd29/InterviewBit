"""
Problem Description
Given two integers arrays, A and B, of size N each.

Find the maximum N elements from the sum combinations (Ai + Bj) formed from elements in arrays A and B.



Problem Constraints
1 <= N <= 2 * 105

-1000 <= A[i], B[i] <= 1000



Input Format
The first argument is an integer array A.
The second argument is an integer array B.



Output Format
Return an integer array denoting the N maximum element in descending order.



Example Input
Input 1:

 A = [1, 4, 2, 3]
 B = [2, 5, 1, 6]
Input 2:

 A = [2, 4, 1, 1]
 B = [-2, -3, 2, 4]


Example Output
Output 1:

 [10, 9, 9, 8]
Output 2:

 [8, 6, 6, 5]


Example Explanation
Explanation 1:

 4 maximum elements are 10(6+4), 9(6+3), 9(5+4), 8(6+2).
Explanation 2:

 4 maximum elements are 8(4+4), 6(4+2), 6(4+2), 5(4+1).
"""
import heapq
class Solution:
	# @param A : list of integers
	# @param B : list of integers
	# @return a list of integers
	def solve(self, A, B):
        n = len(A)
        #create a max heap of size of n 
        res = []
        queue = []
        A.sort()
        B.sort()
        for idx in range(n):
            queue.append((-(A[idx] + B[n - 1]), (idx,n-1)))
        heapq.heapify(queue)
        for idx in range(n):
            if not queue:
                break
            val = heapq.heappop(queue)
            res.append(-val[0])
            if val[1][1] > 0:
                heapq.heappush(queue,(-1*(A[val[1][0]] + B[val[1][1]-1]), (val[1][0], val[1][1]-1)))
        return res
