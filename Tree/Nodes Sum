"""
Problem Description

You are given the root node of a binary tree A. You have to find the sum of node values of this tree.



Problem Constraints

1 <= Number of nodes in the tree <= 105

0 <= Value of each node <= 104



Input Format

First and only argument is a tree node A.



Output Format

Return an integer denoting the sum of node values of the tree.



Example Input

Input 1:

 Values =  1 
          / \     
         4   3                        
Input 2:

 
 Values =  1      
          / \     
         8   3                       
        /         
       2                                     


Example Output

Output 1:

 8 
Output 2:

 14 


Example Explanation

Explanation 1:

Clearly, 1 + 4 + 3 = 8.
Explanation 2:

Clearly, 1 + 8 + 3 + 2 = 14.

"""
# Definition for a  binary tree node
# class TreeNode:
#    def __init__(self, x):
#        self.val = x
#        self.left = None
#        self.right = None

from collections import deque
class Solution:
    # @param A : root node of tree
    # @return an integer
    def solve(self, root):
        queue = deque([root])
        res = 0
        while queue:
            for idx in range(len(queue)):
                node = queue.popleft()
                if node:
                    res += node.val
                    queue.append(node.left)
                    queue.append(node.right)
        return res
