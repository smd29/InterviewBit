"""
Problem Description

You are given an array of N integers, A1, A2, …. AN.

Return the maximum value of f(i, j) for all 1 ≤ i, j ≤ N. f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.



Problem Constraints

1 <= N <= 100000

-109 <= A[i] <= 109



Input Format

First argument is an integer array A of size N.



Output Format

Return an integer denoting the maximum value of f(i, j).



Example Input

Input 1:

A = [1, 3, -1]
Input 2:

 
A = [2]


Example Output

Output 1:

5
Output 2:

0


Example Explanation

Explanation 1:

f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5

So, we return 5.
Explanation 2:

Only possibility is i = 1 and j = 1. That gives answer = 0.
"""
class Solution:
    # @param A : list of integers
    # @return an integer
    def maxArr(self, A):
        x_max, x_min = float('-inf'), float('inf')
        y_max, y_min = float('-inf'), float('inf')
        #x_k = A[k] + k 
        #y_k = A[k] - k
        for idx, val in enumerate(A):
            x_idx = val + idx 
            y_idx = val - idx 
            x_max, x_min = max(x_max,x_idx), min(x_min,x_idx)
            y_max, y_min = max(y_max,y_idx), min(y_min,y_idx)
        return max(x_max-x_min,y_max-y_min)
