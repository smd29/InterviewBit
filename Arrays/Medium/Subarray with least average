"""
Given an array of size N, Find the subarray with least average of size k.
Example Input
Input 1:
A=[3, 7, 90, 20, 10, 50, 40]
B=3
Input 2:

A=[3, 7, 5, 20, -10, 0, 12]
B=2


Example Output
Output 1:
3
Output 2:

4


Example Explanation
Explanation 1:
Subarray between indexes 3 and 5
The subarray {20, 10, 50} has the least average 
among all subarrays of size 3.
Explanation 2:

 Subarray between [4, 5] has minimum average.
 """
 class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return an integer
    def solve(self, A, k):
        #find the minimum sum of subarray of size k 
        curr_sum = 0  
        for i in range(k):
            curr_sum += A[i]
        min_sum = curr_sum
        start = 0
        val = 0
        for i in range(k,len(A)):
            curr_sum += A[i] - A[start]
            if min_sum > curr_sum:
                min_sum = curr_sum
                val = start + 1
            start += 1
        return val  
