"""
Problem Description
Given an integer A. Return minimum count of numbers, sum of whose squares is equal to A.



Problem Constraints
1 <= A <= 105



Input Format
First and only argument is an integer A.



Output Format
Return an integer denoting the minimum count.



Example Input
Input 1:

 A = 6
Input 2:

 A = 5


Example Output
Output 1:

 3
Output 2:

 2


Example Explanation
Explanation 1:

 Possible combinations are : (12 + 12 + 12 + 12 + 12 + 12) and (12 + 12 + 22).
 Minimum count of numbers, sum of whose squares is 6 is 3. 
Explanation 2:

 We can represent 5 using only 2 numbers i.e. 12 + 22 = 5
"""
import math
class Solution:
	# @param A : integer
	# @return an integer
	def countMinSquares(self, A):
        square_nums = [idx ** 2 for idx in range(int(math.sqrt(A))+1)]
        dp = [float('inf')] * (A+1)
        dp[0] = 0 

        for idx in range(1,A+1):
            for square in square_nums:
                if idx < square:
                    break
                dp[idx] = min(dp[idx],dp[idx-square]+1)
        return dp[-1]
