"""
Problem Description
N children are standing in a line. Each child is assigned a rating value.

You are giving candies to these children subjected to the following requirements:

Each child must have at least one candy.
Children with a higher rating get more candies than their neighbors.
What is the minimum number of candies you must give?



Problem Constraints
1 <= N <= 105
-109 <= A[i] <= 109



Input Format
The first and only argument is an integer array A representing the rating of children.



Output Format
Return an integer representing the minimum candies to be given.



Example Input
Input 1:

 A = [1, 2]
Input 2:

 A = [1, 5, 2, 1]


Example Output
Output 1:

 3
Output 2:

 7


Example Explanation
Explanation 1:

 The candidate with 1 rating gets 1 candy and candidate with rating 2 cannot get 1 candy as 1 is its neighbor. 
 So rating 2 candidate gets 2 candies. In total, 2 + 1 = 3 candies need to be given out.
Explanation 2:

 Candies given = [1, 3, 2, 1]
"""
class Solution:
	# @param ratings : list of integers
	# @return an integer
	def candy(self, ratings):
        n = len(ratings)
        candy_left, candy_right = [1] * n, [1] * n
        #assign candies based on left neighbors
        for idx in range(1,n):
            if ratings[idx] > ratings[idx-1]:
                candy_left[idx] = candy_left[idx-1] + 1
            else:
                candy_left[idx] = 1
        #assign candies based on right neighbors
        for idx in range(n-2,-1,-1):
            if ratings[idx] > ratings[idx+1]:
                candy_right[idx] = candy_right[idx+1] + 1
            else:
                candy_right[idx] = 1
        
        total_candies = 0
        #find max of both the arrays and assign those many candies to the concerned candidate and finda total
        for val1,val2 in zip(candy_left,candy_right):
            total_candies += max(val1,val2)
        return total_candies
