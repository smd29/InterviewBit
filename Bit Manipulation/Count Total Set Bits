"""
Problem Description

Given a positive integer A, the task is to count the total number of set bits in the binary representation of all the numbers from 1 to A.

Return the count modulo 109 + 7.



Problem Constraints

1 <= A <= 109



Input Format

First and only argument is an integer A.



Output Format

Return an integer denoting the ( Total number of set bits in the binary representation of all the numbers from 1 to A )modulo 109 + 7.



Example Input

Input 1:

 A = 3
Input 2:

 A = 1


Example Output

Output 1:

 4
Output 2:

 1


Example Explanation

Explanation 1:

 DECIMAL    BINARY  SET BIT COUNT
    1          01        1
    2          10        1
    3          11        2
 1 + 1 + 2 = 4 
 Answer = 4 % 1000000007 = 4
Explanation 2:

 A = 1
  DECIMAL    BINARY  SET BIT COUNT
    1          01        1
 Answer = 1 % 1000000007 = 1
 """
 class Solution:
    # @param A : integer
    # @return an integer
    def solve(self, n):
        #consider A = 24 and instead of 1, start from 0, anyhow it won't contribute in result
        #0th- bit follows a pattern: 0 1 . So, 12 1's
        #1st bit follows 0011 pattern, 2nd bit follows 00001111 pattern
        # Ignore 0 as all the bits are unset
        n += 1;

        # To store the powers of 2
        powerOf2 = 2;

        # To store the result, it is initialized
        # with n/2 because the count of set
        # least significant bits in the integers
        # from 1 to n is n/2
        cnt = n // 2;

        # Loop for every bit required to represent n
        while (powerOf2 <= n):

            # Total count of pairs of 0s and 1s
            totalPairs = n // powerOf2;

            # totalPairs/2 gives the complete
            # count of the pairs of 1s
            # Multiplying it with the current power
            # of 2 will give the count of
            # 1s in the current bit
            cnt += (totalPairs // 2) * powerOf2;
            cnt %= 1000000007 

            # If the count of pairs was odd then
            # add the remaining 1s which could
            # not be groupped together
            if (totalPairs & 1):
                cnt += (n % powerOf2)
            cnt %= 1000000007 
            # Next power of 2
            powerOf2 <<= 1

            # Return the result
        return cnt
