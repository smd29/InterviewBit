"""
Given the price list at which tickets for a flight were purchased, figure out the kth smallest price for the flight. kth smallest price is the minimum possible n such that there are at least k price elements in the price list with value <= n. In other words, if the price list was sorted, then A[k-1] ( k is 1 based, while the array is 0 based ).

NOTE You are not allowed to modify the price list ( The price list is read only ). Try to do it using constant extra space.

Example:

A : [2 1 4 3 2]
k : 3

Answer : 2
Constraints :

1 <= number of elements in the price list <= 1000000
1 <= k <= number of elements in the price list
"""

import heapq
class Solution:
    # @param A : tuple of integers
    # @param B : integer
    # @return an integer
    def kthsmallest(self, A, B):
        low, high = min(A), max(A)
        ans = 0
        while low <= high:
            mid = (low+high) // 2
            #how many are less than equal to mid 
            cnt = 0 
            for val in A:
                if val <= mid:
                    cnt += 1
            if cnt >= B:
                high = mid - 1
                ans = mid
            else:
                low = mid + 1
        return ans
